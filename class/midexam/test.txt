function sum(n){        // 시그마 합
    let sum=0
    for(i=1;i<=n;i++){
        sum+=i
    }
    return sum
}


function convertArray(arr){ // 정수 리스트 짝수, 홀수별 연산해서 새로운 리스트 리턴
    let ini=[];
    for (i=0;i<length.arr;i++){
        if(arr[i]%2==0) ini.push(arr[i]*2+1)
        else ini.push(arr[i]*arr[i])
    }
    return ini
}

function printStarLeft(n){
    for(i=1;i<=n;i++){
        console.log('*'.repeat(i));
    }
}

function printStarRight(n){
    for(i=1;i<=n;i++){
        console.log(' '.repeat(i-1)+'*'.repeat(n-i+1));
    }
}

function pyramidNum(n){     //const pyramid=n=>{
    if(n%2==0){console.log("Input number is even");}
    else{
        for(i=1;i<=n;i+=2){
            console.log(' '.repeat((n-i)/2)+'*'.repeat(i)+' '.repeat((n-i)/2));
        }
    }

}

function fib(n){
    if(n===1){return 1;}
    else if(n===2){return 1;}
    else {return fib(n-1)+fib(n-2)}
}


function fibb(n){
    let a=1;
    let b=1;
    let tmp=0;
    
    if(n===1){return a;}
    if(n===2){return b;}

    for(i=1;i<=n-2;i++){
        tmp=b;
        b=a;
        a=b+tmp;
    }
    return a;
}

function oddEvenConvert(arr){
    let convertedArr=[];
    convertedArr=arr.map(function(a){
        if(a%2===0){
            return a*2+1;
        }else{
            return a*a;
        }
    })
    return convertedArr;
}

function arrayConvertFunction(arr,func){
    let filtered=[];
    filtered=arr.filter(value=>{return func(value)>=2});
    filtered.sort((a,b)=>{return a-b});
    return filtered;
}

function lengthConcat(arr1,arr2){
    if(arr1.length>arr2.length){return arr1.concat(arr2)}
    else{return arr2.concat(arr1)}
}

function returnKey(arr){
    let filtered=[];
    arr.forEach(item=>{filtered=filtered.concat(Object.keys(item))});
    return filtered;
}

function findBanana(str,arr){
    return arr.splice(arr.indexOf(str),1);
}

function findBanana(str,arr){
    while(arr.indexOf(str)>=0){
    arr.splice(arr.indexOf(str),1);
}
    return arr;
}

function newArr(arr1,arr2){
    let arr3=[];
    arr1.splice(arr1.length-2);
    arr2.splice(arr2.length-2);
    return arr3.concat(arr1,arr2);
}